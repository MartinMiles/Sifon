<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2Q==
</value>
  </data>
</root>